<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Marco Bonifacio</title><link>https://marcobonifacio.github.io/</link><description>Sito personale di Marco Bonifacio</description><atom:link href="https://marcobonifacio.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>it</language><copyright>Contents © 2021 &lt;a href="mailto:bonifacio.marco@gmail.com"&gt;Marco Bonifacio&lt;/a&gt; </copyright><lastBuildDate>Tue, 04 May 2021 13:11:56 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Python per la finanza</title><link>https://marcobonifacio.github.io/posts/python-per-la-finanza/</link><dc:creator>Marco Bonifacio</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.python.org"&gt;Python&lt;/a&gt; è per me diventato negli anni uno strumento indispensabile di lavoro, soprattutto quando i dati da gestire superano le capacità di Excel o per effettuare alcune analisi statistiche un po' più sofisticate del solito. Tuttavia, mi sono accorto che costruire un ambiente di lavoro efficace ed efficiente basato su Python non è sempre intuitivo, per cui proverò in questo post a condividere alcune delle cose che ho imparato nel tempo per giungere a una configurazione soddisfacente di questo importante strumento, soprattutto per chi lavora in ambito finanziario o ha comunque necessità di analizzare dei dati.&lt;/p&gt;
&lt;p&gt;La distribuzione di Python più interessante per chi lavora con i dati (o fa &lt;em&gt;data science&lt;/em&gt;, come si dice adesso) è sicuramente &lt;a class="reference external" href="https://www.anaconda.com/products/individual"&gt;Anaconda&lt;/a&gt;, che però installa di &lt;em&gt;default&lt;/em&gt; fin troppe librerie scientifiche per i miei gusti. Esiste una versione &lt;em&gt;minimal&lt;/em&gt; di Anaconda, &lt;a class="reference external" href="https://docs.conda.io/en/latest/miniconda.html"&gt;miniconda&lt;/a&gt;, che installa solo l'interprete del linguaggio e un set minimo di librerie per il funzionamento del &lt;em&gt;package manager&lt;/em&gt;, lasciando all'utente la possibilità di installare poi solo gli ulteriori pacchetti effettivamente necessari per ciascun progetto. Qui però iniziano le difficoltà. Se da un lato conda, rispetto a pip, il &lt;em&gt;package manager&lt;/em&gt; ufficiale di Python, permette una gestione delle librerie più agevole, dall'altro il numnero di pacchetti disponibili è ben inferiore. Per fortuna, un'ampia &lt;em&gt;community&lt;/em&gt; si è fatta carico di ampliare la disponibilità di librerie sotto conda attraverso il canale conda-forge. Mischiare però le distribuzioni "ufficiali" di Anaconda con quelle di conda-forge è sconsigliabile e nel tempo rischia di corrompere i vari ambienti di lavoro di Python. Per questo ho recentemente scoperto con soddifazione &lt;a class="reference external" href="https://github.com/conda-forge/miniforge"&gt;Miniforge&lt;/a&gt; un clone di Miniconda che scarica direttamente i pacchetti di Python dal canale della &lt;em&gt;community&lt;/em&gt; di conda-forge &lt;a class="footnote-reference brackets" href="https://marcobonifacio.github.io/posts/python-per-la-finanza/#id2" id="id1"&gt;1&lt;/a&gt;. Alla fine, quindi, sto usando con soddisfazione da alcuni mesi questa distribuzione, con &lt;em&gt;settings&lt;/em&gt; identici tra i vari dispositivi che utilizzo in modo da avere ambienti di lavoro intercambiabili.&lt;/p&gt;
&lt;dl class="footnote brackets"&gt;
&lt;dt class="label" id="id2"&gt;&lt;span class="brackets"&gt;&lt;a class="fn-backref" href="https://marcobonifacio.github.io/posts/python-per-la-finanza/#id1"&gt;1&lt;/a&gt;&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Anche se in realtà lo stesso risultato si può ottenere in miniconda settando il canale conda-forge per primo.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;&lt;/div&gt;</description><category>conda</category><category>pandas</category><category>python</category><guid>https://marcobonifacio.github.io/posts/python-per-la-finanza/</guid><pubDate>Mon, 03 May 2021 15:35:12 GMT</pubDate></item></channel></rss>